/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package zavrsnirad.view;

import com.github.lgooddatepicker.components.DatePickerSettings;
import com.github.lgooddatepicker.components.DateTimePicker;
import com.github.lgooddatepicker.components.TimePicker;
import com.github.lgooddatepicker.components.TimePickerSettings;
import java.awt.Color;
import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import zavrsnirad.controller.ObradaAviokompanija;
import zavrsnirad.controller.ObradaAvion;
import zavrsnirad.controller.ObradaKorisnik;
import zavrsnirad.controller.ObradaLet;
import zavrsnirad.controller.ObradaRezervacija;

import zavrsnirad.model.Aviokompanija;
import zavrsnirad.model.Avion;
import zavrsnirad.model.Entitet;
import zavrsnirad.model.Korisnik;
import zavrsnirad.model.Let;
import zavrsnirad.model.Rezervacija;
import zavrsnirad.util.AppException;

/**
 *
 * @author lovre
 */
public class ProzorLet extends javax.swing.JFrame {

    private ObradaLet obrada;
    private ObradaRezervacija obradaRezervacija;
   
    private ObradaKorisnik obradaKorisnik;
    private DecimalFormat df;
    Border border = BorderFactory.createLineBorder(Color.GRAY, 1);

    /**
     * Creates new form ProzorLet
     */
    public ProzorLet() {
        initComponents();
        obrada = new ObradaLet();
        obradaRezervacija = new ObradaRezervacija();
        obradaKorisnik = new ObradaKorisnik();
        DecimalFormatSymbols dfs = new DecimalFormatSymbols(Locale.of("hr", "HR"));
        df = new DecimalFormat("###,##0.00", dfs);
        
        setTitle("Pregled letova i rezervacija");
        btnTrazi.setText("üîç");
      
        
        
        
        ucitajAvione();
        ucitajAviokompanije();
        definirajDatumPolaska();
        definirajDatumDolaska();
        
        ucitaj();
       
    }

    private void ucitaj() {
        DefaultListModel<Let> m = new DefaultListModel<>();
        m.addAll(obrada.read());
        lstPodaci.setModel(m);
        lstPodaci.repaint();
    }
    
    
    public Rezervacija getOdabranuRezervaciju(){
            return lstKorisniciNaLetu.getSelectedValue();
}
    
    
    public Let getOdabranLet(){
            return lstPodaci.getSelectedValue();
    
    }
    
    public ObradaLet getObradaLet(){
        return this.obrada;
    
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstPodaci = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        txtBrojLeta = new javax.swing.JTextField();
        btnDodaj = new javax.swing.JButton();
        txtCijena = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cmbAvioni = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cmbAviokompanija = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        dtpVrijemeDolaska = new com.github.lgooddatepicker.components.DateTimePicker();
        dtpVrijemePolaska = new com.github.lgooddatepicker.components.DateTimePicker();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtLukaDolazak = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtLukaPolazak = new javax.swing.JTextField();
        btnPromjeni = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstKorisniciNaLetu = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstKorisniciUBazi = new javax.swing.JList<>();
        btnTrazi = new javax.swing.JButton();
        btnDodajKorisnika = new javax.swing.JButton();
        txtUvjet = new javax.swing.JTextField();
        btnObrisiKorisnika = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        txtTrajanjeLeta = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lstPodaci.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstPodaci.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lstPodaci.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstPodaciValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstPodaci);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 40, 179, 346));

        jLabel1.setText("Broj leta");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 18, -1, -1));

        txtBrojLeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBrojLetaActionPerformed(evt);
            }
        });
        getContentPane().add(txtBrojLeta, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 40, 151, -1));

        btnDodaj.setText("Dodaj");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });
        getContentPane().add(btnDodaj, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 454, -1, -1));

        txtCijena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCijenaActionPerformed(evt);
            }
        });
        getContentPane().add(txtCijena, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 102, 151, -1));

        jLabel2.setText("Cijena ");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 74, -1, -1));

        getContentPane().add(cmbAvioni, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 166, 151, -1));

        jLabel3.setText("Avion");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 144, -1, -1));

        getContentPane().add(cmbAviokompanija, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 254, 151, -1));

        jLabel4.setText("Aviokompanija");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 227, -1, -1));

        jLabel5.setText("Vrijeme polaska");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 300, -1, -1));

        jLabel6.setText("Vrijeme dolaska");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 375, -1, -1));
        getContentPane().add(dtpVrijemeDolaska, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 403, -1, -1));
        getContentPane().add(dtpVrijemePolaska, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 336, -1, -1));

        jLabel7.setText("Trajanje leta(u minutama)");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 432, -1, -1));

        jLabel8.setText("Luka dolazak");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 495, -1, -1));
        getContentPane().add(txtLukaDolazak, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 517, 181, -1));

        jLabel9.setText("Luka polazak");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 545, -1, -1));
        getContentPane().add(txtLukaPolazak, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 573, 181, -1));

        btnPromjeni.setText("Promjeni");
        btnPromjeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPromjeniActionPerformed(evt);
            }
        });
        getContentPane().add(btnPromjeni, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 454, -1, -1));

        btnObrisi.setText("Obri≈°i");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });
        getContentPane().add(btnObrisi, new org.netbeans.lib.awtextra.AbsoluteConstraints(64, 503, -1, -1));

        lstKorisniciNaLetu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstKorisniciNaLetuMouseClicked(evt);
            }
        });
        lstKorisniciNaLetu.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstKorisniciNaLetuValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(lstKorisniciNaLetu);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 42, 268, 588));

        lstKorisniciUBazi.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstKorisniciUBaziValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(lstKorisniciUBazi);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(873, 42, 256, 574));

        btnTrazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraziActionPerformed(evt);
            }
        });
        getContentPane().add(btnTrazi, new org.netbeans.lib.awtextra.AbsoluteConstraints(1075, 6, -1, 30));

        btnDodajKorisnika.setText("<<");
        btnDodajKorisnika.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajKorisnikaActionPerformed(evt);
            }
        });
        getContentPane().add(btnDodajKorisnika, new org.netbeans.lib.awtextra.AbsoluteConstraints(773, 270, -1, -1));
        getContentPane().add(txtUvjet, new org.netbeans.lib.awtextra.AbsoluteConstraints(981, 6, 88, 30));

        btnObrisiKorisnika.setText(">>");
        btnObrisiKorisnika.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiKorisnikaActionPerformed(evt);
            }
        });
        getContentPane().add(btnObrisiKorisnika, new org.netbeans.lib.awtextra.AbsoluteConstraints(773, 334, -1, -1));

        jLabel11.setText("Rezervacije");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 20, -1, -1));

        jLabel12.setText("Korisnici u bazi");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(861, 20, -1, -1));

        jLabel13.setText("Popis letova");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 18, -1, -1));

        jPanel1.setBackground(new java.awt.Color(252, 252, 212));

        txtTrajanjeLeta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtTrajanjeLetaMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(242, 242, 242)
                .addComponent(txtTrajanjeLeta, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(785, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(453, Short.MAX_VALUE)
                .addComponent(txtTrajanjeLeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(255, 255, 255))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1150, 730));

        jMenu1.setText("Izlaz");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jMenuItem2.setText("Izlaz");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lstPodaciValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstPodaciValueChanged
        if (evt.getValueIsAdjusting()) {
            return;
        }
        if (lstPodaci.getSelectedValue() == null) {
            return;
        }

        obrada.setEntitet(lstPodaci.getSelectedValue());

        napuniView();

    }//GEN-LAST:event_lstPodaciValueChanged

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        obrada.setEntitet(new Let());

        napuniModel();
        

        try {
            obrada.create();
            ucitaj();
        } catch (AppException ex) {
            JOptionPane.showMessageDialog(getParent(), ex.getPoruka());

        }

    }//GEN-LAST:event_btnDodajActionPerformed

    private void txtBrojLetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBrojLetaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBrojLetaActionPerformed

    private void txtCijenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCijenaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCijenaActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed

    }//GEN-LAST:event_jMenu1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        new ProzorIzbornik().setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void btnPromjeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPromjeniActionPerformed
        if (lstPodaci.getSelectedValue() == null) {
            return;
        }
        
        napuniModel();
        try {
            obrada.update();
            ucitaj();
        } catch (AppException ex) {
            JOptionPane.showMessageDialog(getParent(), ex.getPoruka());
        }
    }//GEN-LAST:event_btnPromjeniActionPerformed

    private void lstKorisniciUBaziValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstKorisniciUBaziValueChanged


    }//GEN-LAST:event_lstKorisniciUBaziValueChanged

    private void btnTraziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraziActionPerformed
        ucitajKorisnike();
    }//GEN-LAST:event_btnTraziActionPerformed

    private void btnDodajKorisnikaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajKorisnikaActionPerformed
        if (lstKorisniciUBazi.getSelectedValuesList() == null || lstKorisniciUBazi.getSelectedValuesList().isEmpty()) {
            JOptionPane.showMessageDialog(getRootPane(), "Prvo odaberite korisnika");
            return;

        }

        if (lstKorisniciNaLetu.getModel() == null || !(lstKorisniciNaLetu.getModel() instanceof DefaultListModel<Rezervacija>)) {

            lstKorisniciNaLetu.setModel(new DefaultListModel<Rezervacija>());

        }

        DefaultListModel<Rezervacija> m = (DefaultListModel<Rezervacija>) lstKorisniciNaLetu.getModel();

        DefaultListModel<Rezervacija> korisnici = (DefaultListModel<Rezervacija>) lstKorisniciNaLetu.getModel();
        boolean postoji;

        for (Korisnik kub : lstKorisniciUBazi.getSelectedValuesList()) {
            postoji = false;
            for (int i = 0; i < korisnici.getSize(); i++) {

                if (kub.getSifra() == korisnici.get(i).getKorisnik().getSifra()) {
                    postoji = true;
                    break;

                }
            }

            if (!postoji) {

                Rezervacija r = new Rezervacija(obrada.getEntitet(), kub, "");

                korisnici.addElement(r);

            }

        }

        lstKorisniciNaLetu.repaint();


    }//GEN-LAST:event_btnDodajKorisnikaActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        if (lstPodaci.getSelectedValue() == null) {
            return;
        }   
        
           if (JOptionPane.showConfirmDialog(getRootPane(), "Sigurno ≈æelite obrisati let " + obrada.getEntitet().getBr_leta() + "?", "Brisanje", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.NO_OPTION) {

            return;

           }
        
       obrada.getEntitet().getRezervacije().clear();
        try {
            obrada.delete();
            ucitaj();
        } catch (AppException ex) {
            JOptionPane.showMessageDialog(getRootPane(), ex.getPoruka());
            
           
        }
        
       
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnObrisiKorisnikaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiKorisnikaActionPerformed
        if (lstKorisniciNaLetu.getSelectedValuesList() == null || lstKorisniciNaLetu.getSelectedValuesList().isEmpty()) {
            JOptionPane.showMessageDialog(getRootPane(), "Prvo odaberite korisnike na letu");
            return;

        }

        DefaultListModel<Rezervacija> m = (DefaultListModel<Rezervacija>) lstKorisniciNaLetu.getModel();

        for (Rezervacija r : lstKorisniciNaLetu.getSelectedValuesList()) {
            m.removeElement(r);

        }

        lstKorisniciNaLetu.repaint();
    }//GEN-LAST:event_btnObrisiKorisnikaActionPerformed

    private void lstKorisniciNaLetuValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstKorisniciNaLetuValueChanged
          if (lstKorisniciNaLetu.getSelectedValue() == null) {
            return;

        }
        Rezervacija r = lstKorisniciNaLetu.getSelectedValue();
       
    }//GEN-LAST:event_lstKorisniciNaLetuValueChanged

    private void lstKorisniciNaLetuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstKorisniciNaLetuMouseClicked
        if(evt.getClickCount()==2){
           ProzorRezervacija pr = new ProzorRezervacija(this);
           pr.setVisible(true);
       }
        
    }//GEN-LAST:event_lstKorisniciNaLetuMouseClicked

    private void txtTrajanjeLetaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTrajanjeLetaMouseEntered
         LocalDate ld = dtpVrijemePolaska.datePicker.getDate();

        LocalTime lt = dtpVrijemePolaska.timePicker.getTime();

        LocalDateTime fromDateAndTime = LocalDateTime.of(ld,
                lt);

        Date datum = Date.from(fromDateAndTime.atZone(ZoneId.systemDefault()).toInstant());


        LocalDate ldd = dtpVrijemeDolaska.datePicker.getDate();

        LocalTime ltt = dtpVrijemeDolaska.timePicker.getTime();

        LocalDateTime fromDateAndTime1 = LocalDateTime.of(ldd,
                ltt);

        Date datum1 = Date.from(fromDateAndTime1.atZone(ZoneId.systemDefault()).toInstant());

      
        long duration  = datum1.getTime() - datum.getTime();
        
        long diffInMinutes = TimeUnit.MILLISECONDS.toMinutes(duration);
        
        
        if(diffInMinutes < 30 || diffInMinutes > 600){
                    JOptionPane.showMessageDialog(getRootPane(), "Nedozvoljen datum");
        
        }else{
        
        txtTrajanjeLeta.setText(String.valueOf(diffInMinutes));
        }
    }//GEN-LAST:event_txtTrajanjeLetaMouseEntered


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnDodajKorisnika;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnObrisiKorisnika;
    private javax.swing.JButton btnPromjeni;
    private javax.swing.JButton btnTrazi;
    private javax.swing.JComboBox<Aviokompanija> cmbAviokompanija;
    private javax.swing.JComboBox<Avion> cmbAvioni;
    private com.github.lgooddatepicker.components.DateTimePicker dtpVrijemeDolaska;
    private com.github.lgooddatepicker.components.DateTimePicker dtpVrijemePolaska;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<Rezervacija> lstKorisniciNaLetu;
    private javax.swing.JList<Korisnik> lstKorisniciUBazi;
    private javax.swing.JList<Let> lstPodaci;
    private javax.swing.JTextField txtBrojLeta;
    private javax.swing.JTextField txtCijena;
    private javax.swing.JTextField txtLukaDolazak;
    private javax.swing.JTextField txtLukaPolazak;
    private javax.swing.JTextField txtTrajanjeLeta;
    private javax.swing.JTextField txtUvjet;
    // End of variables declaration//GEN-END:variables

    private void napuniModel() {
        var l = obrada.getEntitet();

        try {
            l.setBr_leta(Integer.parseInt(txtBrojLeta.getText()));
        } catch (Exception ex) {

            JOptionPane.showMessageDialog(getRootPane(), "Treba biti cijeli broj");

        }

        l.setLuka_dolazak(txtLukaDolazak.getText());
        l.setLuka_polazak(txtLukaPolazak.getText());

        try {
            l.setCijena(
                    BigDecimal.valueOf(df.parse(txtCijena.getText()).doubleValue()));
        } catch (Exception e) {
            l.setCijena(BigDecimal.ZERO);
        }
      

        l.setAvion((Avion) cmbAvioni.getSelectedItem());
        l.setAviokompanija((Aviokompanija) cmbAviokompanija.getSelectedItem());

        LocalDate ld = dtpVrijemePolaska.datePicker.getDate();

        LocalTime lt = dtpVrijemePolaska.timePicker.getTime();

        LocalDateTime fromDateAndTime = LocalDateTime.of(ld,
                lt);

        Date datum = Date.from(fromDateAndTime.atZone(ZoneId.systemDefault()).toInstant());

        l.setVrijeme_polaska(datum);

        LocalDate ldd = dtpVrijemeDolaska.datePicker.getDate();

        LocalTime ltt = dtpVrijemeDolaska.timePicker.getTime();

        LocalDateTime fromDateAndTime1 = LocalDateTime.of(ldd,
                ltt);

        Date datum1 = Date.from(fromDateAndTime1.atZone(ZoneId.systemDefault()).toInstant());

      
        
        l.setVijeme_dolaska(datum1);
        
        
        long duration  = datum1.getTime() - datum.getTime();
        
        long diffInMinutes = TimeUnit.MILLISECONDS.toMinutes(duration);
        
        
        l.settrajanjeleta(diffInMinutes);
        
        
        
        
     
        
         /* try {
            l.setTrajanjeleta(txt
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(getRootPane(), "Treba biti cijeli broj");

        }*/

        List<Rezervacija> korisnici = new ArrayList<>();

        try {
            DefaultListModel<Rezervacija> m = (DefaultListModel<Rezervacija>) lstKorisniciNaLetu.getModel();
            for (int i = 0; i < m.getSize(); i++) {
                 var r = m.getElementAt(i);
                r.setLet(l);
                korisnici.add(r);
               
            }
        } catch (Exception e) {
            
                
        }

        l.setRezervacije(korisnici);
        System.out.println(l.getRezervacije().size());
               

    }

    private void napuniView() {
        var l = obrada.getEntitet();

        txtBrojLeta.setText(String.valueOf(l.getBr_leta()));
        
         try {
            txtCijena.setText(df.format(l.getCijena()));
        } catch (Exception e) {
            txtCijena.setText("");
        }
         
         
        cmbAvioni.setSelectedItem(l.getAvion());
        cmbAviokompanija.setSelectedItem(l.getAviokompanija());
        txtLukaDolazak.setText(l.getLuka_dolazak());
        txtLukaPolazak.setText(l.getLuka_polazak());
        txtTrajanjeLeta.setText(String.valueOf(l.gettrajanjeleta()));

        if (l.getVrijeme_polaska() == null) {
            dtpVrijemePolaska.datePicker.setDate(null);
            dtpVrijemePolaska.timePicker.setTime(null);

            JOptionPane.showMessageDialog(getRootPane(), "Vrijeme polaska nije pravilno postavljeno");

        } else {
            LocalDate ld = l.getVrijeme_polaska().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            dtpVrijemePolaska.datePicker.setDate(ld);
            LocalTime lt = l.getVrijeme_polaska().toInstant().atZone(ZoneId.systemDefault()).toLocalTime();
            dtpVrijemePolaska.timePicker.setTime(lt);

        }

        if (l.getVijeme_dolaska() == null) {

            JOptionPane.showMessageDialog(getRootPane(), "Vrijeme dolaska nije pravilno postavljeno");

        } else {
            LocalDate ldd = l.getVijeme_dolaska().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            dtpVrijemeDolaska.datePicker.setDate(ldd);

            LocalTime ltt = l.getVijeme_dolaska().toInstant().atZone(ZoneId.systemDefault()).toLocalTime();
            dtpVrijemeDolaska.timePicker.setTime(ltt);

        }

        DefaultListModel<Rezervacija> m = new DefaultListModel<>();
        if (l.getRezervacije() != null) {
            m.addAll(l.getRezervacije());
           

        }
        
         lstKorisniciNaLetu.setModel(m);
         lstKorisniciNaLetu.repaint();
         
         
         System.out.println(l.getRezervacije().size());

    }

    private void ucitajAvione() {
        DefaultComboBoxModel<Avion> m = new DefaultComboBoxModel<>();
        Avion a = new Avion();
        a.setSifra(0);
        a.setNaziv("Nije odabrano");
        m.addElement(a);

        m.addAll(new ObradaAvion().read());
        cmbAvioni.setModel(m);
        cmbAvioni.repaint();

    }

    private void ucitajAviokompanije() {
        DefaultComboBoxModel<Aviokompanija> m = new DefaultComboBoxModel<>();
        Aviokompanija a = new Aviokompanija();
        a.setSifra(0);
        a.setNaziv("Nije odabrano");
        m.addElement(a);

        m.addAll(new ObradaAviokompanija().read());
        cmbAviokompanija.setModel(m);
        cmbAviokompanija.repaint();
    }

    private void definirajDatumPolaska() {
        DatePickerSettings dps = new DatePickerSettings(Locale.of("hr", "HR"));
        dps.setFormatForDatesCommonEra("dd. MM. YYY.");
        dps.setTranslationClear("Oƒçisti");
        dps.setTranslationToday("Danas");
        dtpVrijemePolaska.datePicker.setSettings(dps);

        TimePickerSettings tps = new TimePickerSettings(Locale.of("hr", "HR"));
        tps.setFormatForDisplayTime("HH:mm");
        dtpVrijemePolaska.timePicker.getSettings().use24HourClockFormat();

        ArrayList<LocalTime> lista = new ArrayList<>();

        for (int j = 0; j < 24; j++) {
            for (int i = 0; i < 60; i += 5) {
                lista.add(LocalTime.of(j, i));
            }
        }

        dtpVrijemePolaska.timePicker.getSettings()
                .generatePotentialMenuTimes(lista);

    }

    private void definirajDatumDolaska() {
        DatePickerSettings dps = new DatePickerSettings(Locale.of("hr", "HR"));
        dps.setFormatForDatesCommonEra("dd. MM. YYY. ");
        dps.setTranslationClear("Oƒçisti");
        dtpVrijemeDolaska.datePicker.setSettings(dps);

        TimePickerSettings tps = new TimePickerSettings(Locale.of("hr", "HR"));
        tps.setFormatForDisplayTime("HH:MM");

        dtpVrijemeDolaska.timePicker.getSettings().use24HourClockFormat();

        ArrayList<LocalTime> lista = new ArrayList<>();

        for (int j = 0; j < 24; j++) {
            for (int i = 0; i < 60; i += 5) {
                lista.add(LocalTime.of(j, i));
            }
        }

        dtpVrijemeDolaska.timePicker.getSettings()
                .generatePotentialMenuTimes(lista);

    }

    private void ucitajKorisnike() {
        DefaultListModel<Korisnik> m = new DefaultListModel<>();
        m.addAll(obradaKorisnik.read(txtUvjet.getText(), true));
        lstKorisniciUBazi.setModel(m);
        lstKorisniciUBazi.repaint();

    }

}
